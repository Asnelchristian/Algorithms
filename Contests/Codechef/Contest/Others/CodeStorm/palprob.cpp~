#include<iostream>
#include<algorithm>
#include <stdio.h>
#include <cmath>
#include <vector>
#define mod 1000000007

using namespace std;
typedef long long ll; 
ll power(ll base,ll exponent){
	if(!exponent)
		return 1
	remaining_multiplicand = 1
	result = base
	while(exponent > 1){
		remainder=exponent % 2
		if (remainder > 0)
			remaining_multiplicand = remaining_multiplicand * result
		exponent = (exponent - remainder) / 2
		result = result * result
	}
	return result * remaining_multiplicand
	
	}
ll gcd(ll i,ll n){
	for(ll j=2;j<i+1;j++ ){
		if ( !(i%j) && !(n%j))
			return j
	}		
	return 1
	}		 

int main()
{
	ios_base::sync_with_stdio(false);
	
	ll t,g,n,k,su=0;
	cin>>t;

	
	while(t--){
		cin>>n>>k;
		su+=1;
		if !(n%2){
			for(ll i=3;i<n;i+=2){
				g=gcd(i,n)
				if(g==1)
					su+=(power(i,k)%mod)
			}
		}		
		else{	
			for i=2;i<n;i++){
				g=gcd(i,n)
				if(g==1)
					su+=(power(i,k)%mod)
			}
		}
		cout<<su;
		su=0			
	}	
		
		
		t-=1	
		
	
	
	
	
	return 0;
}
